---
# Install Elasticsearch dependencies
- name: "Install Elasticsearch dependencies"
  apt: pkg={{ item }} state=present update-cache=yes
  with_items: elasticsearch.dependencies
  tags:
    - elasticsearch

# Fetch Elasticsearch Debian package
- name: "Fetch Elasticsearch: {{ elasticsearch.url }}/{{ elasticsearch.debian_package }}"
  get_url: url={{ elasticsearch.url }}/{{ elasticsearch.debian_package }} dest={{ tmp_dir }} thirsty=yes mode=0440
  register: elasticsearch_deb
  when: download
  environment: proxy_env
  tags:
    - elasticsearch

# Install Elasticsearch
- name: "Install Elasticsearch package: {{ elasticsearch.debian_package }}"
  shell: "dpkg -i -E --force-confnew {{ tmp_dir }}/{{ elasticsearch.debian_package }} 2>&1 | grep skipping | wc -l"
  when: elasticsearch_deb|changed
  tags:
    - elasticsearch

# Add JAVA_HOME var in init script
- name: "Add JAVA_HOME to Elasticsearch init script"
  lineinfile: dest=/etc/init.d/{{ elasticsearch.service }} state=present regexp="^JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64" insertafter="^DEFAULT=/etc/default/" line="JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64"
  notify:
    - "Restart Elasticsearch"
  tags:
    - elasticsearch

# Change Elasticsearch bind IP
- name: "Change Elasticsearch bind IP: {{ elasticsearch.config }}"
  lineinfile: "dest={{ elasticsearch.config }} state=present regexp='^network.host' insertafter='# network.host' line='network.host: {{ with_elasticsearch_ip }}'"
  notify:
    - "Restart Elasticsearch"
  tags:
    - elasticsearch

# Cambio el nombre del Cluster de Elasticsearch
- name: "Cambio el nombre del cluster de Elasticsearch por: {{ elasticsearch.cluster_name }}"
  lineinfile: "dest={{ elasticsearch.config }} state=present regexp='^cluster.name' insertafter='# cluster.name' line='cluster.name: {{ elasticsearch.cluster_name }}'"
  notify:
    - "Restart Elasticsearch"
  tags:
    - elasticsearch

# Cambio el nombre del Nodo de Elasticsearch
- name: "Cambio el nombre del nodo de Elasticsearch por: {{ elasticsearch.node_name}}"
  lineinfile: "dest={{ elasticsearch.config }} state=present regexp='^node.name' insertafter='# node.name' line='node.name: {{ elasticsearch.node_name}}'"
  notify:
    - "Restart Elasticsearch"
  tags:
    - elasticsearch

# Creo directorios de datos y de logs para Elasticsearch 
#- name: "Creo directorios de datos y de logs para Elasticsearch"
#  file: path={{ item }} group=root owner=root mode=0755 state=directory
#  with_items: dirs_http

# Cambio el directorio de datos de Elasticsearch
- name: "Cambio el directorio de datos de Elasticsearch por: {{ elasticsearch.path_data }}"
  lineinfile: "dest={{ elasticsearch.config }} state=present regexp='^path.data' insertafter='# path.data' line='path.data: {{ elasticsearch.path_data }}'"
  notify:
    - "Restart Elasticsearch"
  tags:
    - elasticsearch

# Cambio el directorio de logs de Elasticsearch
- name: "Cambio el directorio de logs de Elasticsearch por: {{ elasticsearch.path_logs }}"
  lineinfile: "dest={{ elasticsearch.config }} state=present regexp='^path.logs' insertafter='# path.logs' line='path.logs: {{ elasticsearch.path_logs }}'"
  notify:
    - "Restart Elasticsearch"
  tags:
    - elasticsearch

# Aseguro tener la cantidad suficiente de filedescriptors
- name: "Aseguro tener la cantidad suficiente de filedescriptors en: {{ elasticsearch.file_descriptors }}"
  lineinfile: "dest=/etc/security/limits.conf state=present regexp='^elasticsearch    hard' insertbefore='# End of file' line='elasticsearch    hard    nofile          {{ elasticsearch.file_descriptors }}'"
  notify:
    - "Restart Elasticsearch"
  tags:
    - elasticsearch


# Ensure Elasticsearch is running
- name: "Ensure Elasticsearch is running"
  service: name={{ elasticsearch.service }} state=started
  tags:
    - elasticsearch
